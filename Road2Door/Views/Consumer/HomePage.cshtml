@model Consumer

<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />
    <style>
        .container-fluid{
            margin:0px;
            padding:0px;
            width:100%;
        }
        .notification {
            color: white;
            text-decoration: none;
            padding: 1px 1px;
            position: relative;
            display: inline-block;
            border-radius: 2px;
            margin-right:3%;
        }

            .notification .badge {
                position: absolute;
                top: -10px;
                right: -10px;
                padding: 5px 10px;
                border-radius: 50%;
                background: red;
                color: white;
            }

        .dropdown {
            position: relative;
        }

        .dropdown-menu {
            position: absolute;
            top: 100%;
            left: 0;
            z-index: 1;
            display: none;
            float: left;
            min-width: 10rem;
            padding: 0.5rem 0;
            margin: 0.125rem 0 0;
            font-size: 1rem;
            color: #212529;
            text-align: left;
            list-style: none;
            background-color: #fff;
            background-clip: padding-box;
            border: 1px solid rgba(0, 0, 0, 0.15);
            border-radius: 0.25rem;
        }

        .dropdown:hover .dropdown-menu {
            display: block;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <h1>Consumer home page</h1>

        <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
            <a class="navbar-brand" href="#">Navbar w/ text</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarText" aria-controls="navbarText" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarText">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="#">Order History</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">Features</a>
                    </li>
                </ul>
                <a href="#" class="notification">
                    <i class="fa fa-bell" style="font-size:20px;color:red"></i>
                    <span class="badge">3</span>
                </a>
                <div class="dropdown">
                    <a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                        @Model.Name
                    </a>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                        <li><a class="dropdown-item" asp-action="Settings" asp-controller="Consumer">Settings</a></li>
                        <li><a class="dropdown-item" href="#">Logout</a></li>
                        <li><a class="dropdown-item" href="#">Account Deactivate</a></li>
                    </ul>
                </div>
            </div>
        </nav>
    </div>
    <button onclick="getLocation()">Get Location</button>


    <a asp-action="Logout" asp-controller="Consumer">Logout</a>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"></script>
</body>
</html>

<script>
    function getLocation() {
        if (navigator.geolocation) {
            // Retrieve the location initially
            navigator.geolocation.getCurrentPosition(sendPosition);
            // Set an interval to retrieve the location periodically (e.g., every 10 seconds)
            setInterval(function () {
                navigator.geolocation.getCurrentPosition(sendPosition);
            }, 10000); // 10,000 milliseconds = 10 seconds
        } else {
            alert("Geolocation is not supported by this browser.");
        }
    }

    function sendPosition(position) {
        var latitude = position.coords.latitude;
        var longitude = position.coords.longitude;

        // Send the latitude and longitude to the server using AJAX
        var xhr = new XMLHttpRequest();
        xhr.open("POST", "/Consumer/UpdateLocation", true); 
        xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        xhr.send("latitude=" + latitude + "&longitude=" + longitude);

    }
</script>